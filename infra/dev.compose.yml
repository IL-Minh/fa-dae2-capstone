services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"  # JMX monitoring port
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@localhost:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      CLUSTER_ID: 'xUl_ExjdQaSZB9OGK7wHYg'
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  producer:
    build:
      context: ..
      dockerfile: infra/Dockerfile.producer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  consumer:
    build:
      context: ..
      dockerfile: infra/Dockerfile.consumer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PG_DSN=postgresql://T0@host.docker.internal:5432/DB_T0
    depends_on:
      - kafka
    restart: unless-stopped

volumes:
  kafka_data:
    driver: local




